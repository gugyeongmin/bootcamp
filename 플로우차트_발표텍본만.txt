
[1p 좌측 상단]
저희 팀의 개발 플로우 차트는 총 2장입니다.
최대한 한 장에 담으려고 했으나, Stage2에서 필살기 사용으로 인해
조건문 사용이 하나 더 추가되어 두 장으로 나눠 그리게 되었습니다.

좌측 상단에 써진 세 가지 사항은 두 페이지 모두에 적용되는 사항으로
차트를 보며 설명 드리겠습니다.

[1p 우측 상단(Start~Stage1)]
먼저 전체 데이터 흐름 개요를 말씀 드리겠습니다.
화면에 게임이 노출되는 걸 시작으로 
이름 입력 받은 후, Stage1과 Stage2를 각 논리 구조에 맞게 구현 하고
모든 답을 맞히면 종료되는 방식입니다.

Stage 1 시작 전, load함수와 time함수를 이용해
안내 화면 이미지를 2초간 노출합니다.
시작 후에는 정답 2개와 오답 2개 이미지가 바다 위에 나타나고,
유저가 첫 번째 답으로 정답1을 선택 하는지 아닌 지에 따라 흐름이 나뉩니다.

[1p 좌측 하단]
만약, 유저가 정답1을 선택한 경우
True 방향으로 이동해 정답2를 선택하는 True/False문으로 이동됩니다.

정답2를 선택하는 True 값의 경우, 바로 다음 Stage2로 이동됩니다.

만약 오답1을 선택하는 경우, 다시 정답2를 선택하도록 하여 다음 Stage2로 이동하도록 합니다.

[1p 우측 하단]
이와 반대로 유저가 첫 번째 조건문에서 정답1이 아닌, 오답을 선택한 경우
False 방향으로 이동하고,  오답2를 선택할지 말지에 대한 조건문으로 이동됩니다.

정답2를 선택하지 않는 False 값의 경우,  다시 정답1 선택으로 이동됩니다.

만약 오답2를 선택하는 True가 되면, 
힌트가 나타나 다음 Stage2로 이동할 수 있도록 흐름을 유도합니다.
이어서 Stage 2 설명을 드리겠습니다. (다음 장으로)

[2p 우측 상단(if 정답3 선택 이전 설명)]
Stage 2에 필요한 기본 디폴트값 역시 Stage1과 동일합니다.

Stage 2의 정답 2가지를 정답3과 정답4라고 정한 뒤 하단 내용을 작성했습니다.

[2p 좌측 흐름도 부분]
오른쪽에 있는,
유저가 첫 번째 정답3을 선택하지 않는 False 값 이후의 흐름은
이전 Stage1의 첫 번째 조건 False 값 이후 흐름과 동일합니다.

Stage1과 흐름의 차이점은, 왼쪽에 있는
첫 번째 정답3을 선택한 True부분 이후에 나타납니다.
첫 번째 정답을 선택하고 나면, Tkinter를 사용해 만든 퀴즈창이 출력됩니다.

Y/N 버튼 클릭형이며, 해당 문제에 대한 정답은 No이므로
No를 선택하는 경우 바로 게임이 종료됩니다.

오답인 Yes를 고르는 경우, 창이 사라지고 게임이 재개됩니다.
오답4를 선택하지 않는 경우, 즉 정답4를 선택하면 게임이 종료됩니다.

만약, 오답4를 선택해 정답1개와 오답1개를 고른 경우에는
다른 정답 1개를 고를 수 있도록 조건문을 사용합니다.
이때, 오답을 고르게 된다면 False문에 따라 힌트 출력으로 이어지고,
다른 정답 1개를 마저 골라 게임이 종료될 수 있도록 흐름을 유도합니다.

이상입니다.  
